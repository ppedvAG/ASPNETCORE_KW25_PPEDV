@page

@model RazorPageKurs.Pages.Modul003.RazorSyntaxSampleModel




@*Ich bin ein Kommentar*@



@*Einfache Ausgabe einer Variable*@
<p>@Model.Username</p>

@*Ausgabe von @Model.Username*@
<p>@@Model.Username</p>

@*Einfache Ausgabe der Uhrzeit *@
<p>@DateTime.Now</p>

<p>@(DateTime.Now - TimeSpan.FromDays(7))</p>


@{
    //Ich lege ein lokaes Person-Objekt an
    Person person = new Person("Mareike", 22);

}

<p>@person.Name</p>
<p>@person.Age</p>

<hr/>

<h2>Kontrollstrukturen</h2>
<p>For-Schleife</p>

@for(int i = 0; i < Model.Peoples.Length; i++)
{
    <p>@Model.Peoples[i].Name - @Model.Peoples[i].Age</p>
}

<p>foreach-Schleife</p>

@foreach (Person currentPerson in Model.Peoples)
{
    <p>@currentPerson.Name - @currentPerson.Age</p>
}


@{
     //Ich lege ein lokaes value-Variable an
    int value = 124; 
}

<p>Value durch 2 teilbar?</p>
@if (value % 2 == 0)
{
    <p>@value ist durch 2 teilbar</p>
}
else
{
    <p>@value ist nicht durch 2 teilbar</p>
}


<p>Switch Sample</p>
@switch (value)
{
    case 124:
        <p>The value is 124</p>
        break;
    default:
        <p>unerwarteter Wert</p>
        break;
}


<h2>Razor Befehle die besser nicht im Frontend erfolgen sollen -> Gibt es UseCases dafür? </h2>

@try
{
    throw new InvalidOperationException("You did something invalid.");
}
catch (Exception ex)
{
    <p>The exception message: @ex.Message</p>
}
finally
{
    <p>The finally statement.</p>
}

@* 7.5 @lock *@
@lock (Model.Username)
{
    // Do critical section work
}

@*Zugriff auf IOC Container*@
@using RazorPageKurs.Services
@inject IRequestCounter counter


@*Interfaces einbinden*@
@*@implements IDisposable

@functions {
    private bool _isDisposed;

    public void Dispose()
    {
        _isDisposed = true;
    }
}*@

@*Section wird für das Einbinden von Scripten verwendet*@
@section Scripts {
    <script type="text/javascript" src="~/scripts/main.js"></script>

    <script>
        $(document).ready(function () {
            alert("Test");
        });
    </script>
}